/* v0.1.1 - Thu Dec 18 2014 08:51:47 */
!function(a,b,c){"undefined"!=typeof module&&module.exports?module.exports=c():"function"==typeof define&&define.amd?define(c):b[a]=c()}("ChordParser",this,function(){"use strict";function a(b){if("string"!=typeof b)throw new Error("ChordParser must be invoked with a string");return this instanceof a?(this.input=b,void(this.defaults={ignorecase:!1})):new a(b)}var b=function(){for(var a,b,c=[].slice.call(arguments),d=c.shift();a=c.shift();)for(b in a)a.hasOwnProperty(b)&&(d[b]=a[b]);return d},c="\\b[A-G](?:(?:add|dim|aug|maj|mM|mMaj|sus|m|b|#|\\d)?(?:\\/[A-G0-9])?)*(?!\\||â€”|-|\\.|:)(?:\\b|#)+";return a.prototype.wrap=function(a,d){d=b({},this.defaults,d||{});var e=new RegExp(c,d.ignorecase?"gi":"g");return this.input.replace(e,function(b){return a(b)})},a.prototype.all=function(a){a=b({},this.defaults,a||{});var d=new RegExp(c,a.ignorecase?"gi":"g"),e=this.input.match(d);return e?e.sort(function(a,b){return a=a.toLowerCase(),b=b.toLowerCase(),a>b?1:b>a?-1:0}):[]},a.prototype.unique=function(a){return this.all(a).filter(function(a,b,c){return c.indexOf(a)===b})},a});